// Colors
//
// Grayscale and brand colors for use across Bootstrap.
// Start with assigning color names to specific hex values.
$white: #fff;
$black: #000;
$red: #d9534f;
$orange: #f0ad4e;
$yellow: #ffd500;
$green: #5cb85c;
$blue: #2575fc;
$teal: #5bc0de;
$pink: #ff5b77;
$purple: #613d7c;
//
// Create grayscale
$gray-dark: #292b2c;
$gray: #464a4c;
$gray-light: #636c72;
$gray-lighter: #eceeef;
$gray-lightest: #f7f7f9;
$blue-gray-light: #f0f3f7;
//
// Reassign color vars to semantic color scheme
$brand-primary: $blue;
$brand-success: $green;
$brand-info: $teal;
$brand-warning: $orange;
$brand-danger: $red;
$brand-inverse: $gray-dark;
//
// Serif Fonts
$serif-font: 'Playfair Display', serif;
$condensed-font: 'Oswald', "Impact", sans-serif;
$sans-serif-font:  'Dosis', Arial, Sans-serif;
//
@mixin _assert-ascending($map, $map-name) {
    $prev-key: null;
    $prev-num: null;
    @each $key,
    $num in $map {
        @if $prev-num==null {
            // Do nothing
        }
        @else if not comparable($prev-num, $num) {
            @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
        }
        @else if $prev-num >=$num {
            @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
        }
        $prev-key: $key;
        $prev-num: $num;
    }
}

@mixin _assert-starts-at-zero($map) {
    $values: map-values($map);
    $first-value: nth($values, 1);
    @if $first-value !=0 {
        @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
    }
}

// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.
$grid-breakpoints: ( xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px);
@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints);
